- name: Set dir path facts
  ansible.builtin.set_fact:
    terraform_cache_dir_path: "{{ xdg_cache_home_dir_path }}/terraform"
    terraform_config_dir_path: "{{ xdg_config_home_dir_path }}/terraform"

- name: Set plugin cache dir path fact
  ansible.builtin.set_fact:
    terraform_plugin_cache_dir_path: "{{ terraform_cache_dir_path }}/plugins"

- name: Set config path fact
  ansible.builtin.set_fact:
    terraform_config_path: "{{ terraform_config_dir_path }}/terraform.tfrc"

- name: Install latest
  ansible.builtin.command:
    cmd: "{{ tenv_exe_path }} tf install latest"
  environment:
    TENV_ROOT: "{{ tenv_data_dir_path }}"
  changed_when: false

- name: Check executable
  ansible.builtin.command:
    cmd: "{{ homebrew_exe_dir_path }}/terraform version"
  environment:
    TENV_ROOT: "{{ tenv_data_dir_path }}"
  changed_when: false

- name: Uninstall old
  ansible.builtin.command:
    cmd: "{{ tenv_exe_path }} tf uninstall not-used-for:90d"
  environment:
    TENV_ROOT: "{{ tenv_data_dir_path }}"
  register: task
  changed_when: "'No matching Terraform versions' not in task.stdout"

- name: Create dirs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: u=rwx,g=,o=
  loop:
    - "{{ terraform_cache_dir_path }}"
    - "{{ terraform_config_dir_path }}"
    - "{{ terraform_plugin_cache_dir_path }}"

- name: Place config
  ansible.builtin.copy:
    dest: "{{ terraform_config_path }}"
    mode: u=rw,g=,o=
    content: |
      plugin_cache_dir = "{{ terraform_cache_dir_path }}/plugins"

- name: Set up environment in Bash
  ansible.builtin.blockinfile:
    path: "{{ shell_bash_login_script_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: {{ role_name }} environment"
    block: |
      export TF_CLI_CONFIG_FILE="{{ terraform_config_path }}"

- name: Set up environment in Zsh
  ansible.builtin.blockinfile:
    path: "{{ shell_zsh_login_script_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: {{ role_name }} environment"
    block: |
      export TF_CLI_CONFIG_FILE="{{ terraform_config_path }}"

- name: Set up completion in Bash
  ansible.builtin.blockinfile:
    path: "{{ bash_completion_script_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: {{ role_name }} completion"
    block: |
      complete -C terraform terraform

- name: Set up completion in Zsh
  ansible.builtin.blockinfile:
    path: "{{ zsh_zshrc_compinit_post_script_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: {{ role_name }} completion"
    block: |
      complete -C terraform terraform
