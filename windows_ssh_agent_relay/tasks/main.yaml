- name: Set data dir path fact
  ansible.builtin.set_fact:
    windows_ssh_agent_relay__data_dir_path: >-
      {{ xdg_base_dirs__data_dir_path }}/windows-ssh-agent-relay

- name: Set miscellaneous facts
  ansible.builtin.set_fact:
    windows_ssh_agent_relay__systemd_unit_name: windows-ssh-agent-relay.service

    windows_ssh_agent_relay__script_path: >-
      {{ windows_ssh_agent_relay__data_dir_path }}/windows-ssh-agent-relay.sh

    # Path to the OpenSSH executable in Windows. Must be the special Windows
    # fork of OpenSSH that stores keys within a Windows security context.
    windows_ssh_agent_relay__ssh_exe_path: >-
      {{ windows_mount_dir_path }}/Windows/System32/OpenSSH/ssh.exe

    # Paths to the OpenSSH agent socket in Linux. This is the destination of the
    # relay action. In Linux, OpenSSH is then configured to use this socket.
    windows_ssh_agent_relay__socket_path: >-
      /run/user/{{ ansible_facts.user_uid }}/windows-ssh-agent-relay/windows-ssh-agent-relay.sock

- name: Check exe existence
  ansible.builtin.stat:
    path: "{{ windows_ssh_agent_relay__ssh_exe_path }}"

- name: Check exe usability
  ansible.builtin.command:
    cmd: "'{{ windows_ssh_agent_relay__ssh_exe_path }}' -V"
  changed_when: false

- name: Create data dir
  ansible.builtin.file:
    state: directory
    path: "{{ windows_ssh_agent_relay__data_dir_path }}"
    mode: u=rwx,g=,o=

- name: Render and place script
  ansible.builtin.template:
    src: "{{ windows_ssh_agent_relay__script_path | basename }}"
    dest: "{{ windows_ssh_agent_relay__script_path }}"
    mode: u=rwx,g=,o=
  register: windows_ssh_agent_relay__render_and_place_script

- name: Render and place systemd unit file
  ansible.builtin.template:
    src: "{{ windows_ssh_agent_relay__systemd_unit_name }}"
    dest: /etc/systemd/system/{{ windows_ssh_agent_relay__systemd_unit_name }}
    mode: u=rw,g=r,o=r
  become: true
  register: windows_ssh_agent_relay__render_and_place_systemd_unit_file

- name: Verify systemd unit file
  when: windows_ssh_agent_relay__render_and_place_systemd_unit_file.changed
  ansible.builtin.command:
    cmd: systemd-analyze verify {{ windows_ssh_agent_relay__systemd_unit_name }}
  become: true
  changed_when: false

- name: Reload systemd daemon
  when: windows_ssh_agent_relay__render_and_place_systemd_unit_file.changed
  ansible.builtin.systemd_service:
    daemon_reload: true
  become: true

- name: Enable systemd unit
  ansible.builtin.systemd_service:
    name: "{{ windows_ssh_agent_relay__systemd_unit_name }}"
    enabled: true
  become: true

- name: Check systemd unit activity
  ansible.builtin.command:
    cmd: systemctl is-active --quiet {{ windows_ssh_agent_relay__systemd_unit_name }}
  changed_when: false
  failed_when: false
  become: true
  register: windows_ssh_agent_relay__check_systemd_unit_activity

- name: Start systemd unit
  when: windows_ssh_agent_relay__check_systemd_unit_activity.rc != 0
  ansible.builtin.systemd_service:
    name: "{{ windows_ssh_agent_relay__systemd_unit_name }}"
    state: started
  become: true
  register: windows_ssh_agent_relay__start_systemd_unit

- name: Restart systemd unit
  when: >-
    windows_ssh_agent_relay__check_systemd_unit_activity.rc == 0
    and (
      windows_ssh_agent_relay__render_and_place_systemd_unit_file.changed
      or windows_ssh_agent_relay__render_and_place_script.changed
    )
  ansible.builtin.systemd_service:
    name: "{{ windows_ssh_agent_relay__systemd_unit_name }}"
    state: restarted
  become: true
  register: windows_ssh_agent_relay__restart_systemd_unit

- name: Pause before checking systemd unit
  when: >-
    windows_ssh_agent_relay__start_systemd_unit.changed
    or windows_ssh_agent_relay__restart_systemd_unit.changed
  ansible.builtin.command: sleep 5
  changed_when: false
  become: true

- name: Check systemd unit activity
  ansible.builtin.command:
    cmd: systemctl is-active --quiet {{ windows_ssh_agent_relay__systemd_unit_name }}
  changed_when: false
  become: true

- name: Check wants symlink existence
  ansible.builtin.stat:
    path: /etc/systemd/system/multi-user.target.wants/{{ windows_ssh_agent_relay__systemd_unit_name }}

- name: Check key existence in agent
  ansible.builtin.command:
    cmd: ssh-add -l
  environment:
    SSH_AUTH_SOCK: "{{ windows_ssh_agent_relay__socket_path }}"
  changed_when: false

- name: Set up environment in Bash
  ansible.builtin.blockinfile:
    path: "{{ shell__bash_login_script_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: {{ role_name }} environment"
    block: |
      export SSH_AUTH_SOCK="{{ windows_ssh_agent_relay__socket_path }}"

- name: Set up environment in Zsh
  ansible.builtin.blockinfile:
    path: "{{ shell__zsh_login_script_path }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: {{ role_name }} environment"
    block: |
      export SSH_AUTH_SOCK="{{ windows_ssh_agent_relay__socket_path }}"
