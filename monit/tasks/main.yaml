- name: Set dir path facts
  ansible.builtin.set_fact:
    monit__data_dir_path: >-
      {{ fhs_base_dirs__opt_data_dir_path }}/monit

    monit__config_dir_path: /etc/monit/conf.d

- name: Set misc facts
  ansible.builtin.set_fact:
    monit__systemd_unit_name: monit.service

    monit__check_monit_logs_for_errors_exe_path: >-
      {{ monit__data_dir_path }}/check-monit-logs-for-errors.sh

    monit__echo_something_went_wrong_exe_path: >-
      {{ monit__data_dir_path }}/echo-something-went-wrong.sh

    monit__send_alert_for_monit_exec_errors_exe_path: >-
      {{ monit__data_dir_path }}/send-alert-for-monit-exec-errors.sh

    monit__send_alert_for_systemd_unit_failing_exe_path: >-
      {{ monit__data_dir_path }}/send-alert-for-systemd-unit-failing.sh

- name: Create dir
  ansible.builtin.file:
    path: "{{ monit__data_dir_path }}"
    state: directory
    mode: u=rwx,g=rx,o=rx
  become: true

- name: Render and place exes
  ansible.builtin.template:
    src: "{{ item | basename }}"
    dest: "{{ item }}"
    mode: u=rwx,g=r,o=r
  become: true
  loop:
    - "{{ monit__check_monit_logs_for_errors_exe_path }}"
    - "{{ monit__echo_something_went_wrong_exe_path }}"
    - "{{ monit__send_alert_for_monit_exec_errors_exe_path }}"
    - "{{ monit__send_alert_for_systemd_unit_failing_exe_path }}"

- name: Install
  ansible.builtin.apt:
    name: monit
    state: present
  become: true
  register: monit__install

- name: Set cycle
  ansible.builtin.lineinfile:
    path: /etc/monit/monitrc
    regexp: ^set daemon .+$
    line: set daemon 60
  become: true
  register: monit__set_cycle

- name: Set log
  ansible.builtin.lineinfile:
    path: /etc/monit/monitrc
    regexp: ^set log .+$
    state: absent
  become: true
  register: monit__set_log

- name: Place httpd.conf
  ansible.builtin.copy:
    dest: "{{ monit__config_dir_path }}/httpd.conf"
    content: |
      set httpd
        port 2812
        allow 127.0.0.1
        allow ::1
    mode: u=rw,g=r,o=r
  become: true
  register: monit__place_httpd_conf

- name: Place check-always-true.conf
  ansible.builtin.copy:
    dest: "{{ monit__config_dir_path }}/check-always-true.conf"
    content: |
      check program check-always-true
        with path "/usr/bin/true"
        with timeout 5 seconds
        every 10 cycles
      if status != 0
        then exec "{{ monit__echo_something_went_wrong_exe_path }}"
        repeat every 11 cycles
    mode: u=rw,g=r,o=r
  become: true
  register: monit__place_check_always_true_conf

- name: Place check-always-false.conf
  ansible.builtin.copy:
    dest: "{{ monit__config_dir_path }}/check-always-false.conf"
    content: |
      check program check-always-false
        with path "/usr/bin/false"
        with timeout 5 seconds
        every 10 cycles
      if status != 1
        then exec "{{ monit__echo_something_went_wrong_exe_path }}"
        repeat every 11 cycles
    mode: u=rw,g=r,o=r
  become: true
  register: monit__place_check_always_false_conf


- name: Place check-monit-logs-for-errors.conf
  ansible.builtin.copy:
    dest: "{{ monit__config_dir_path }}/check-monit-logs-for-errors.conf"
    content: |
      check program check-for-monit-exec-errors
        with path "{{ monit__check_monit_logs_for_errors_exe_path }}"
        with timeout 5 seconds
        every 5 cycles
      if status != 0 then
        exec "{{ monit__send_alert_for_monit_exec_errors_exe_path }}"
        repeat every 6 cycles
    mode: u=rw,g=r,o=r
  become: true
  register: monit__place_check_monit_logs_for_errors_conf

- name: Check syntax
  ansible.builtin.command:
    cmd: monit -t
  changed_when: false
  become: true

- name: Render and place systemd unit file
  ansible.builtin.template:
    src: "{{ monit__systemd_unit_name }}"
    dest: /etc/systemd/system/{{ monit__systemd_unit_name }}
    mode: u=rw,g=r,o=r
  become: true
  register: monit__render_and_place_systemd_unit_file

- name: Verify systemd unit file
  when: monit__render_and_place_systemd_unit_file.changed
  ansible.builtin.command:
    cmd: systemd-analyze verify {{ monit__systemd_unit_name }}
  become: true
  changed_when: false

- name: Reload systemd daemon
  when: >-
    monit__install.changed
    or monit__render_and_place_systemd_unit_file.changed
  ansible.builtin.systemd_service:
    daemon_reload: true
  become: true

- name: Enable systemd unit
  ansible.builtin.systemd_service:
    name: "{{ monit__systemd_unit_name }}"
    enabled: true
  become: true

- name: Pause before checking systemd unit
  when: monit__install.changed
  ansible.builtin.command: sleep 5
  changed_when: false
  become: true

- name: Check systemd unit activity
  ansible.builtin.command:
    cmd: systemctl is-active --quiet {{ monit__systemd_unit_name }}
  changed_when: false
  failed_when: false
  become: true
  register: monit__check_systemd_unit_activity

- name: Start systemd unit
  when: monit__check_systemd_unit_activity.rc != 0
  ansible.builtin.systemd_service:
    name: "{{ monit__systemd_unit_name }}"
    state: started
  become: true
  register: monit__start_systemd_unit

- name: Restart systemd unit
  when: >-
    monit__check_systemd_unit_activity.rc == 0
    and (
      monit__render_and_place_systemd_unit_file.changed
      or monit__set_cycle.changed
      or monit__set_log.changed
      or monit__place_httpd_conf.changed
      or monit__place_check_always_true_conf.changed
      or monit__place_check_always_false_conf.changed
      or monit__place_check_monit_logs_for_errors_conf.changed
    )
  ansible.builtin.systemd_service:
    name: "{{ monit__systemd_unit_name }}"
    state: restarted
  register: monit__restart_systemd_unit
  become: true

- name: Pause before checking systemd unit
  when: >-
    monit__install.changed
    or monit__start_systemd_unit.changed
    or monit__restart_systemd_unit.changed
  ansible.builtin.command: sleep 5
  changed_when: false
  become: true

- name: Check systemd unit activity
  ansible.builtin.command:
    cmd: systemctl is-active --quiet {{ monit__systemd_unit_name }}
  changed_when: false
  become: true

- name: Delete log file
  ansible.builtin.file:
    path: /var/log/monit.log
    state: absent
  become: true
