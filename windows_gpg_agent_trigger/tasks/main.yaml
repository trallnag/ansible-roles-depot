- name: Set data dir path fact
  ansible.builtin.set_fact:
    windows_gpg_agent_trigger__data_dir_path: >-
      {{ base_dirs_xdg__data_dir_path }}/windows-gpg-agent-trigger

- name: Set miscellaneous facts
  ansible.builtin.set_fact:
    windows_gpg_agent_trigger__systemd_unit_name: windows-gpg-agent-trigger.service

    windows_gpg_agent_trigger__script_path: >-
      {{ windows_gpg_agent_trigger__data_dir_path }}/windows-gpg-agent-trigger.sh

    # Path to the connect-agent executable in Windows.
    windows_gpg_agent_trigger__exe_path: >-
      {{ windows_mount_dir_path }}/Program Files (x86)/GnuPG/bin/gpg-connect-agent.exe

    # Path to the sentinel lock file in Windows.
    windows_gpg_agent_trigger__lock_path: >-
      {{ windows_home_dir_path }}/AppData/Roaming/gnupg/gnupg_spawn_agent_sentinel.lock

- name: Check executable existence
  ansible.builtin.stat:
    path: "{{ windows_gpg_agent_trigger__exe_path }}"

- name: Check executable usability
  ansible.builtin.command:
    cmd: "'{{ windows_gpg_agent_trigger__exe_path }}' --help"
  changed_when: false

- name: Create data dir
  ansible.builtin.file:
    state: directory
    path: "{{ windows_gpg_agent_trigger__data_dir_path }}"
    mode: u=rwx,g=,o=

- name: Render and place script
  ansible.builtin.template:
    src: "{{ windows_gpg_agent_trigger__script_path | basename }}"
    dest: "{{ windows_gpg_agent_trigger__script_path }}"
    mode: u=rwx,g=,o=
  register: windows_gpg_agent_trigger__render_and_place_script

- name: Render and place systemd unit file
  ansible.builtin.template:
    src: "{{ windows_gpg_agent_trigger__systemd_unit_name }}"
    dest: /etc/systemd/system/{{ windows_gpg_agent_trigger__systemd_unit_name }}
    mode: u=rw,g=r,o=r
  become: true
  register: windows_gpg_agent_trigger__render_and_place_systemd_unit_file

- name: Verify systemd unit file
  when: windows_gpg_agent_trigger__render_and_place_systemd_unit_file.changed
  ansible.builtin.command:
    cmd: systemd-analyze verify {{ windows_gpg_agent_trigger__systemd_unit_name }}
  become: true
  changed_when: false

- name: Reload systemd daemon
  when: windows_gpg_agent_trigger__render_and_place_systemd_unit_file.changed
  ansible.builtin.systemd_service:
    daemon_reload: true
  become: true

- name: Enable systemd unit
  ansible.builtin.systemd_service:
    name: "{{ windows_gpg_agent_trigger__systemd_unit_name }}"
    enabled: true
  become: true

- name: Check systemd unit activity
  ansible.builtin.command:
    cmd: >-
      systemctl is-active --quiet
      {{ windows_gpg_agent_trigger__systemd_unit_name }}
  changed_when: false
  failed_when: false
  become: true
  register: windows_gpg_agent_trigger__check_systemd_unit_activity

- name: Start systemd unit
  when: windows_gpg_agent_trigger__check_systemd_unit_activity.rc != 0
  ansible.builtin.systemd_service:
    name: "{{ windows_gpg_agent_trigger__systemd_unit_name }}"
    state: started
  become: true
  register: windows_gpg_agent_trigger__start_systemd_unit

- name: Restart systemd unit
  when: >-
    windows_gpg_agent_trigger__check_systemd_unit_activity.rc == 0
    and (
      windows_gpg_agent_trigger__render_and_place_systemd_unit_file.changed
      or windows_gpg_agent_trigger__render_and_place_script.changed
    )
  ansible.builtin.systemd_service:
    name: "{{ windows_gpg_agent_trigger__systemd_unit_name }}"
    state: restarted
  become: true
  register: windows_gpg_agent_trigger__restart_systemd_unit

- name: Pause before checking systemd unit
  when: >-
    windows_gpg_agent_trigger__start_systemd_unit.changed
    or windows_gpg_agent_trigger__restart_systemd_unit.changed
  ansible.builtin.command: sleep 5
  changed_when: false
  become: true

- name: Check systemd unit activity
  ansible.builtin.command:
    cmd: >-
      systemctl is-active --quiet
      {{ windows_gpg_agent_trigger__systemd_unit_name }}
  changed_when: false
  become: true

- name: Check wants symlink existence
  ansible.builtin.stat:
    path: "{{ path_parts | join }}"
  vars:
    path_parts:
      - /etc/systemd/system/multi-user.target.wants/
      - "{{ windows_gpg_agent_trigger__systemd_unit_name }}"
