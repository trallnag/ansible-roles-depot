- name: Set data dir path fact
  ansible.builtin.set_fact:
    windows_gpg_bridge_data_dir_path: >-
      {{ xdg_data_home_dir_path }}/windows-gpg-bridge

- name: Set target info facts
  ansible.builtin.set_fact:
    # Version of gpg-bridge to install.
    windows_gpg_bridge_target_version: "0.1.1"

    # Checksum (SHA-256) of gpg-bridge archive.
    windows_gpg_bridge_target_digest: >-
      3c7595d0f4f135937b7b9dfae7b0dc4134e88100fd563d2b751a48613dcf42ab

- name: Set misc facts
  ansible.builtin.set_fact:
    windows_gpg_bridge_exe_path: >-
      {{ windows_gpg_bridge_data_dir_path }}/gpg-bridge

    windows_gpg_bridge_unit_name: windows-gpg-bridge.service

    # Combined and passed with `--extra` parameter as argument.
    windows_gpg_bridge_extra_host: "127.0.0.1"
    windows_gpg_bridge_extra_port: "54321"

- name: Create data dir
  ansible.builtin.file:
    state: directory
    path: "{{ windows_gpg_bridge_data_dir_path }}"
    mode: u=rwx,g=,o=

- name: Get installed version
  ansible.builtin.shell:
    executable: /usr/bin/bash
    cmd: |
      set -euo pipefail
      if [[ -f "{{ windows_gpg_bridge_exe_path }}" ]]; then
        "{{ windows_gpg_bridge_exe_path }}" --version | sed "s/gpg-bridge //"
      fi
  register: windows_gpg_bridge_get_installed_version
  changed_when: false

- name: Set installed version fact
  ansible.builtin.set_fact:
    windows_gpg_bridge_installed_version: >-
      {{
        windows_gpg_bridge_get_installed_version.stdout
        | regex_search(".+\..+\..+")
      }}

- name: Print installed version
  ansible.builtin.debug:
    var: windows_gpg_bridge_installed_version

- name: Install
  when: >-
    windows_gpg_bridge_installed_version
    != windows_gpg_bridge_target_version
  block:
    - name: Delete executable
      ansible.builtin.file:
        path: "{{ windows_gpg_bridge_exe_path }}"
        state: absent

    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
      register: temp_dir

    - name: Download archive
      ansible.builtin.get_url:
        url: "{{ url_parts | join }}"
        dest: "{{ temp_dir.path }}/gpg-bridge.zip"
        mode: u=rw,g=,o=
        force: true
      vars:
        url_parts:
          - "https://github.com/BusyJay/gpg-bridge/releases/download/v"
          - "{{ windows_gpg_bridge_target_version }}/gpg-bridge-v"
          - "{{ windows_gpg_bridge_target_version }}.zip"

    - name: Validate archive checksum
      ansible.builtin.shell:
        executable: /usr/bin/bash
        cmd: |
          set -euo pipefail
          sha256sum "{{ temp_dir.path }}/gpg-bridge.zip" \
            | grep -F "{{ windows_gpg_bridge_target_digest }}"
      changed_when: false

    - name: Unzip archive
      ansible.builtin.unarchive:
        src: "{{ temp_dir.path }}/gpg-bridge.zip"
        dest: "{{ temp_dir.path }}"
        remote_src: true

    - name: Move executable
      ansible.builtin.command:
        cmd: >-
          mv --force
          "{{ temp_dir.path }}/gpg-bridge.exe"
          "{{ windows_gpg_bridge_exe_path }}"

    - name: Set file permissions
      ansible.builtin.file:
        path: "{{ windows_gpg_bridge_exe_path }}"
        mode: u=rwx,g=,o=

    - name: Get new installed version
      ansible.builtin.shell:
        executable: /usr/bin/bash
        cmd: |
          set -euo pipefail
          "{{ windows_gpg_bridge_exe_path }}" --version | sed "s/gpg-bridge //"
      register: windows_gpg_bridge_get_new_installed_version
      changed_when: false

    - name: Set new installed version fact
      ansible.builtin.set_fact:
        windows_gpg_bridge_new_installed_version: >-
          {{
            windows_gpg_bridge_get_new_installed_version.stdout
            | regex_search('.+\..+\..+')
          }}

    - name: Print new installed version
      ansible.builtin.debug:
        var: windows_gpg_bridge_new_installed_version

    - name: Validate installed version correctness
      ansible.builtin.assert:
        that:
          - >-
            windows_gpg_bridge_new_installed_version
            == windows_gpg_bridge_target_version
        fail_msg: >-
          Something went wrong with the installation. Newly installed version
          is unexpected. Got `{{ windows_gpg_bridge_new_installed_version }}`,
          want `{{ windows_gpg_bridge_target_version }}`.

- name: Set up systemd unit
  ansible.builtin.include_role:
    name: trallnag.systemd_unit
  vars:
    systemd_unit_name: "{{ windows_gpg_bridge_unit_name }}"
    systemd_unit_activate: true
    systemd_unit_running_check: true
    systemd_unit_running_check_delay: "3"
    systemd_unit_content: >-
      {{
        lookup(
          'ansible.builtin.template',
          windows_gpg_bridge_unit_name
        )
      }}

- name: Validate wants symlink existence
  ansible.builtin.stat:
    path: "{{ path_parts | join }}"
  vars:
    path_parts:
      - /etc/systemd/system/multi-user.target.wants/
      - "{{ windows_gpg_bridge_unit_name }}"
